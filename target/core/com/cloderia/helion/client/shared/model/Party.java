package com.cloderia.helion.client.shared.model;

import java.util.Date;
import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;

import org.jboss.errai.databinding.client.api.Bindable;

import org.jboss.errai.common.client.api.annotations.Portable;

/**
 * Party generated by hbm2java
 */
@Bindable
@Portable
@Entity
@NamedQueries({
  @NamedQuery(name = Party.ALL_ENTITIES_QUERY, query = "SELECT e FROM Party e ORDER BY e.id")
})
@Table(name="party"
    ,catalog="helion"
)
public class Party extends BaseEntity implements java.io.Serializable {

	public static final String ALL_ENTITIES_QUERY = "allPartys";
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
    private Long id;

    private String entityCode;

    private PartyType partyType;

    private String name;

    private String userName;

    private String description;

    private BusinessUnit businessUnit;

    public Party() {
    }

    @Id @GeneratedValue(strategy=IDENTITY)
    @Column(name="id", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }

    @Column(name="entity_code", nullable=false, length=35)
    public String getEntityCode() {
        return this.entityCode;
    }
    
    public void setEntityCode(String entityCode) {
        this.entityCode = entityCode;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="party_type", nullable=false)
    public PartyType getPartyType() {
        return this.partyType;
    }
    
    public void setPartyType(PartyType partyType) {
        this.partyType = partyType;
    }

    @Column(name="name", nullable=false, length=35)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    @Column(name="user_name", nullable=false, length=35)
    public String getUserName() {
        return this.userName;
    }
    
    public void setUserName(String userName) {
        this.userName = userName;
    }

    @Column(name="description", nullable=false, length=35)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="business_unit", nullable=false)
    public BusinessUnit getBusinessUnit() {
        return this.businessUnit;
    }
    
    public void setBusinessUnit(BusinessUnit businessUnit) {
        this.businessUnit = businessUnit;
    }

}


